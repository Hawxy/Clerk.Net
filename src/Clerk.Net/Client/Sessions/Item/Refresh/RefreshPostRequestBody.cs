// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Clerk.Net.Client.Sessions.Item.Refresh
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RefreshPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The JWT that is sent via the `__session` cookie from your frontend.Note: this JWT must be associated with the supplied session ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExpiredToken { get; set; }
#nullable restore
#else
        public string ExpiredToken { get; set; }
#endif
        /// <summary>The format of the response.</summary>
        public global::Clerk.Net.Client.Sessions.Item.Refresh.RefreshPostRequestBody_format? Format { get; set; }
        /// <summary>The JWT that is sent via the `__session` cookie from your frontend.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RefreshToken { get; set; }
#nullable restore
#else
        public string RefreshToken { get; set; }
#endif
        /// <summary>The headers of the request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Clerk.Net.Client.Sessions.Item.Refresh.RefreshPostRequestBody_request_headers? RequestHeaders { get; set; }
#nullable restore
#else
        public global::Clerk.Net.Client.Sessions.Item.Refresh.RefreshPostRequestBody_request_headers RequestHeaders { get; set; }
#endif
        /// <summary>The origin of the request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequestOrigin { get; set; }
#nullable restore
#else
        public string RequestOrigin { get; set; }
#endif
        /// <summary>The IP address of the request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequestOriginatingIp { get; set; }
#nullable restore
#else
        public string RequestOriginatingIp { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Clerk.Net.Client.Sessions.Item.Refresh.RefreshPostRequestBody"/> and sets the default values.
        /// </summary>
        public RefreshPostRequestBody()
        {
            Format = global::Clerk.Net.Client.Sessions.Item.Refresh.RefreshPostRequestBody_format.Token;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Clerk.Net.Client.Sessions.Item.Refresh.RefreshPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Clerk.Net.Client.Sessions.Item.Refresh.RefreshPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Clerk.Net.Client.Sessions.Item.Refresh.RefreshPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "expired_token", n => { ExpiredToken = n.GetStringValue(); } },
                { "format", n => { Format = n.GetEnumValue<global::Clerk.Net.Client.Sessions.Item.Refresh.RefreshPostRequestBody_format>(); } },
                { "refresh_token", n => { RefreshToken = n.GetStringValue(); } },
                { "request_headers", n => { RequestHeaders = n.GetObjectValue<global::Clerk.Net.Client.Sessions.Item.Refresh.RefreshPostRequestBody_request_headers>(global::Clerk.Net.Client.Sessions.Item.Refresh.RefreshPostRequestBody_request_headers.CreateFromDiscriminatorValue); } },
                { "request_origin", n => { RequestOrigin = n.GetStringValue(); } },
                { "request_originating_ip", n => { RequestOriginatingIp = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("expired_token", ExpiredToken);
            writer.WriteEnumValue<global::Clerk.Net.Client.Sessions.Item.Refresh.RefreshPostRequestBody_format>("format", Format);
            writer.WriteStringValue("refresh_token", RefreshToken);
            writer.WriteObjectValue<global::Clerk.Net.Client.Sessions.Item.Refresh.RefreshPostRequestBody_request_headers>("request_headers", RequestHeaders);
            writer.WriteStringValue("request_origin", RequestOrigin);
            writer.WriteStringValue("request_originating_ip", RequestOriginatingIp);
        }
    }
}
#pragma warning restore CS0618
