// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Clerk.Net.Client.Oauth_applications.Access_tokens.Verify
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class VerifyPostResponse : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The client_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClientId { get; set; }
#nullable restore
#else
        public string ClientId { get; set; }
#endif
        /// <summary>The created_at property</summary>
        public double? CreatedAt { get; set; }
        /// <summary>The expiration property</summary>
        public double? Expiration { get; set; }
        /// <summary>The expired property</summary>
        public bool? Expired { get; set; }
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The object property</summary>
        public global::Clerk.Net.Client.Oauth_applications.Access_tokens.Verify.VerifyPostResponse_object? Object { get; set; }
        /// <summary>The revocation_reason property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RevocationReason { get; set; }
#nullable restore
#else
        public string RevocationReason { get; set; }
#endif
        /// <summary>The revoked property</summary>
        public bool? Revoked { get; set; }
        /// <summary>The scopes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Scopes { get; set; }
#nullable restore
#else
        public List<string> Scopes { get; set; }
#endif
        /// <summary>The subject property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subject { get; set; }
#nullable restore
#else
        public string Subject { get; set; }
#endif
        /// <summary>The updated_at property</summary>
        public double? UpdatedAt { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Clerk.Net.Client.Oauth_applications.Access_tokens.Verify.VerifyPostResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Clerk.Net.Client.Oauth_applications.Access_tokens.Verify.VerifyPostResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Clerk.Net.Client.Oauth_applications.Access_tokens.Verify.VerifyPostResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "client_id", n => { ClientId = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetDoubleValue(); } },
                { "expiration", n => { Expiration = n.GetDoubleValue(); } },
                { "expired", n => { Expired = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "object", n => { Object = n.GetEnumValue<global::Clerk.Net.Client.Oauth_applications.Access_tokens.Verify.VerifyPostResponse_object>(); } },
                { "revocation_reason", n => { RevocationReason = n.GetStringValue(); } },
                { "revoked", n => { Revoked = n.GetBoolValue(); } },
                { "scopes", n => { Scopes = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "subject", n => { Subject = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("client_id", ClientId);
            writer.WriteDoubleValue("created_at", CreatedAt);
            writer.WriteDoubleValue("expiration", Expiration);
            writer.WriteBoolValue("expired", Expired);
            writer.WriteStringValue("id", Id);
            writer.WriteEnumValue<global::Clerk.Net.Client.Oauth_applications.Access_tokens.Verify.VerifyPostResponse_object>("object", Object);
            writer.WriteStringValue("revocation_reason", RevocationReason);
            writer.WriteBoolValue("revoked", Revoked);
            writer.WriteCollectionOfPrimitiveValues<string>("scopes", Scopes);
            writer.WriteStringValue("subject", Subject);
            writer.WriteDoubleValue("updated_at", UpdatedAt);
        }
    }
}
#pragma warning restore CS0618
