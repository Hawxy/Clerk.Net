// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Clerk.Net.Client.Instance.Restrictions {
    public class RestrictionsPatchRequestBody : IParsable 
    {
        /// <summary>The allowlist property</summary>
        public bool? Allowlist { get; set; }
        /// <summary>The block_disposable_email_domains property</summary>
        public bool? BlockDisposableEmailDomains { get; set; }
        /// <summary>The block_email_subaddresses property</summary>
        public bool? BlockEmailSubaddresses { get; set; }
        /// <summary>The blocklist property</summary>
        public bool? Blocklist { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="RestrictionsPatchRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static RestrictionsPatchRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new RestrictionsPatchRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"allowlist", n => { Allowlist = n.GetBoolValue(); } },
                {"block_disposable_email_domains", n => { BlockDisposableEmailDomains = n.GetBoolValue(); } },
                {"block_email_subaddresses", n => { BlockEmailSubaddresses = n.GetBoolValue(); } },
                {"blocklist", n => { Blocklist = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("allowlist", Allowlist);
            writer.WriteBoolValue("block_disposable_email_domains", BlockDisposableEmailDomains);
            writer.WriteBoolValue("block_email_subaddresses", BlockEmailSubaddresses);
            writer.WriteBoolValue("blocklist", Blocklist);
        }
    }
}
