// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Clerk.Net.Client.Instance.Organization_settings
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.17.0")]
    #pragma warning disable CS1591
    public partial class Organization_settingsPatchRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The admin_delete_enabled property</summary>
        public bool? AdminDeleteEnabled { get; set; }
        /// <summary>Specify what the default organization role is for an organization creator.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatorRoleId { get; set; }
#nullable restore
#else
        public string CreatorRoleId { get; set; }
#endif
        /// <summary>Specify what the default organization role is for the organization domains.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DomainsDefaultRoleId { get; set; }
#nullable restore
#else
        public string DomainsDefaultRoleId { get; set; }
#endif
        /// <summary>The domains_enabled property</summary>
        public bool? DomainsEnabled { get; set; }
        /// <summary>Specify which enrollment modes to enable for your Organization Domains.Supported modes are &apos;automatic_invitation&apos; &amp; &apos;automatic_suggestion&apos;.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DomainsEnrollmentModes { get; set; }
#nullable restore
#else
        public List<string> DomainsEnrollmentModes { get; set; }
#endif
        /// <summary>The enabled property</summary>
        public bool? Enabled { get; set; }
        /// <summary>The max_allowed_memberships property</summary>
        public int? MaxAllowedMemberships { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Clerk.Net.Client.Instance.Organization_settings.Organization_settingsPatchRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Clerk.Net.Client.Instance.Organization_settings.Organization_settingsPatchRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Clerk.Net.Client.Instance.Organization_settings.Organization_settingsPatchRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "admin_delete_enabled", n => { AdminDeleteEnabled = n.GetBoolValue(); } },
                { "creator_role_id", n => { CreatorRoleId = n.GetStringValue(); } },
                { "domains_default_role_id", n => { DomainsDefaultRoleId = n.GetStringValue(); } },
                { "domains_enabled", n => { DomainsEnabled = n.GetBoolValue(); } },
                { "domains_enrollment_modes", n => { DomainsEnrollmentModes = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "enabled", n => { Enabled = n.GetBoolValue(); } },
                { "max_allowed_memberships", n => { MaxAllowedMemberships = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("admin_delete_enabled", AdminDeleteEnabled);
            writer.WriteStringValue("creator_role_id", CreatorRoleId);
            writer.WriteStringValue("domains_default_role_id", DomainsDefaultRoleId);
            writer.WriteBoolValue("domains_enabled", DomainsEnabled);
            writer.WriteCollectionOfPrimitiveValues<string>("domains_enrollment_modes", DomainsEnrollmentModes);
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteIntValue("max_allowed_memberships", MaxAllowedMemberships);
        }
    }
}
